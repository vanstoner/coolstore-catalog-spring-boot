apiVersion: v1
kind: DeploymentConfig
metadata:
  labels:
    application: coolstore
    component: catalog
  name: catalog-postgresql
spec:
  replicas: 1
  selector:
    deploymentconfig: catalog-postgresql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        application: coolstore
        component: catalog
        deploymentconfig: catalog-postgresql
      name: catalog-postgresql
    spec:
      containers:
      - env:
        - name: POSTGRESQL_USER
          value: {{catalog.db.username}}
        - name: POSTGRESQL_PASSWORD
          value: {{catalog.db.password}}
        - name: POSTGRESQL_DATABASE
          value: catalogdb
        image: {{REGISTRY}}/openshift/postgresql:latest
        imagePullPolicy: Always
        livenessProbe:
          initialDelaySeconds: 30
          tcpSocket:
            port: 5432
          timeoutSeconds: 1
        name: catalog-postgresql
        ports:
        - containerPort: 5432
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -i
            - -c
            - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
              'SELECT 1'
          initialDelaySeconds: 5
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 50m
            memory: 128Mi
        volumeMounts:
        - mountPath: /var/lib/pgsql/data
          name: catalog-postgresql-data
      terminationGracePeriodSeconds: 60
      volumes:
      - emptyDir: {}
        name: catalog-postgresql-data
  triggers:
  - imageChangeParams:
      automatic: true
      containerNames:
      - catalog-postgresql
      from:
        kind: ImageStreamTag
        name: postgresql:latest
        namespace: openshift
    type: ImageChange
  - type: ConfigChange
